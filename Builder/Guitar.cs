using System.Collections.Generic;

namespace Builder
{
    /// <summary>
    /// Class - 'Product'.
    /// This is a class which defines the parts of the complex object which are to be generated by the Builder Pattern.
    /// </summary>
    public class Guitar
    {
        /// <summary>
        /// Collection of product parts.
        /// </summary>
        private readonly List<object> _parts = new List<object>();

        /// <summary>
        /// Add part of the product to the collection.
        /// </summary>
        /// <param name="part"> Part of the product. </param>
        public void Add(string part)
        {
            _parts.Add(part);
        }

        /// <summary>
        /// Display all parts of the created product.
        /// </summary>
        /// <returns> String with all parts of product. </returns>
        public string ListParts()
        {
            string str = string.Empty;

            for (int i = 0; i < _parts.Count; i++)
            {
                str += _parts[i] + ", ";
            }

            // Removing last ", ".
            str = str.Remove(str.Length - 2);

            return $"Product parts: {str}\n";
        }
    }
}